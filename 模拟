小蓝和小桥是游戏世界里的两个好友，他们正在玩一个有趣的挑战。他们手中有一个长度为 
n 的神秘物品序列，每个物品都有一个数字 
a 
i表示它的价值。他们可以执行以下操作：
选择一个物品，并将其价值加 
1
1。
小蓝和小桥希望通过若干次操作使得这个序列的价值之和与价值的积都不为 
0
0。

请你帮他们计算，至少需要执行多少次操作才能完成这个挑战。

输入格式
第一行包含一个整数 
�
t（
1
≤
�
≤
100
1≤t≤100），表示测试用例的数量。

接下来 
�
t 行，每行包含两行数据，第一行为一个整数 
�
n（
1
≤
�
≤
1000
1≤n≤1000），表示物品的数量。第二行为 
�
n 个整数 
�
1
,
�
2
,
…
,
�
�
a 
1
​
 ,a 
2
​
 ,…,a 
n
​
 （
−
1000
≤
�
�
≤
1000
−1000≤a 
i
​
 ≤1000），表示初始的物品价值。

输出格式
对于每个测试用例，输出一行一个整数，表示至少需要执行的操作次数。

样例输入
2
2
0 0
3
-1 0 1
copy
样例输出
2
1



#include <bits/stdc++.h>
using namespace std;
int main()
{

  int t;cin>>t;
  int n;
  for(int i=0;i<t;i++)
  {
    cin>>n;
    vector<int>v(n);//定义大小为n的数组
    int count=0;//一定在第一层循环里且初始化为0每组数据 不一样
    int sum=0;

    for(int j=0;j<n;j++)
    {
        cin>>v[j];
        sum+=v[j];//数组求和
        if(v[j]==0)
        {
            count++;如果有一个元素为0乘积一定为0，所以次数加一，但是因为没有对数组值加一所以后续的sum求和时要给为0 的数加一，加一的个数就是为0 的个数即sum+=count
        }
    }
    sum+=count;
    if(sum==0)count++;//处理加一后的数组如果还未0 则在加一一次
    cout<<count<<endl;
  }
  // 请在此输入您的代码
  return 0;
}
