给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。

请必须使用时间复杂度为 O(log n) 的算法。

示例 1:

输入: nums = [1,3,5,6], target = 5
输出: 2
示例 2:

输入: nums = [1,3,5,6], target = 2
输出: 1
示例 3:

输入: nums = [1,3,5,6], target = 7
输出: 4
class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        int l=0,r=nums.size()-1;
        while(l<=r)
        {
            int mid=(l+r)/2;
            if(target>nums[r])  return r+1;
            if(target<nums[0]) return 0;
            if(nums[mid]==target)  return mid;
            else if(nums[mid]>target)
            {
                r=mid-1;
            }
            else 
            {
                l=mid+1;
            }
        }
        //如果需要插入元素可以加入一下代码
        //nums.insert(nums.begin()+l,target);
        return l;
    }
};




